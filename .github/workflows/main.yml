name: Python CI/CD with Docker

on:
  push:
    branches: [ "main" ]

jobs:
  create-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9" 

      - name: Install pipx
        run: python -m pip install pipx && python -m pipx ensurepath

      - name: Install Poetry
        run: pipx install poetry

      - name: Configurar entorno virtual en el proyecto
        run: poetry config virtualenvs.in-project true

      - name: Regenerar archivo de bloqueo
        run: poetry lock

      - name: Instalar dependencias sin instalar el proyecto ra√≠z
        run: poetry install

      - name: Ejecutar Flake8 (lint)
        run: poetry run flake8 ./

      - name: Ejecutar pruebas unitarias
        run: poetry run pytest test_main.py

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: nach0t/solemne1web:latest

  deploy:
    name: Notify Deployment to GitHub
    runs-on: ubuntu-latest
    needs: create-docker-image
    steps:
      - name: Notify GitHub of Deployment
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/deployments \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{
            "ref": "refs/heads/main",
            "task": "deploy",
            "auto_merge": false,
            "required_contexts": [],
            "environment": "production",
            "description": "Deploying Docker image nach0t/solemne1web:latest"
          }'
